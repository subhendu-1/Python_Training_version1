The Best Prompt for a Developer "Build an advanced Airline Reservation System with superior functionality and an intuitive, modern UI/UX. The system should have the following features and adhere to these requirements: Features 1. User Roles and Dashboards Guest Dashboard: Displays a list of available flights. Allows flight searches by source, destination, and flight number. Provides a "Login to Book" button redirecting to a login page. Customer Dashboard: Enables flight booking with a passenger details table (including name, age, passenger and ticket type). Downloads ticket invoices in PDF format. Admin Dashboard: Includes management sections for flights, airplanes, airports, and bookings. Implements full CRUD functionality for all management sections. View bookings with customer details and total price. 2. Advanced Features Real-time form validations. Dynamic progress bar to visualize user progress through booking or management steps. Global navbar with active states indicating the current section. Header across all pages with airline logo, title (“SIH Airways”), and a brief description about the system. 3. Technologies Code must be implemented in JavaScript, TypeScript, and CSS. Use modern libraries like React and Material UI (or any suitable design libraries for advanced styling and user interactions). PDF Invoice Generation with improved structure (e.g., title, horizontal separators, aligned content, and signatures). Implement proper state management using React Context API or Redux. 4.UI/UX Guidelines Create modern, responsive interfaces optimized for all screen sizes. Apply Human Interface Guidelines for intuitive interactions (e.g., subtle animations, elegant tables, and fluid transitions). Ensure cohesive branding with sleek fonts, balanced colors, and structured layouts. Clean and contemporary design with helpful tooltips and clear validation feedback. Prioritize accessibility with support for screen readers, ARIA labels, and seamless keyboard navigation. 5. Structure and Optimization Modular code structure for scalability. Components like Navbar, ProgressBar, Header, and Footer should be reusable. Optimize code for performance (e.g., lazy-loading components and minimizing re-renders). Final Deliverables Provide a complete project consisting of: Source Code: All functionality implemented with clean, readable, and maintainable code. Proper comments and documentation for clarity. UI/UX Designs: Well-designed interfaces for each user role (Guest, Customer, Admin). A unified style for dashboards and management sections. Demo: Include a setup guide for installation and running the application locally or deploying it to the web.






The Best Prompt for a Developer "Build an advanced Airline Reservation System with superior functionality and an intuitive, modern UI/UX . The system should have the following features and adhere to these requirements: Features 1. User Roles and Dashboards Guest Dashboard: Displays a list of available flights. Allows flight searches by source, destination, and flight number. Provides a "Login to Book" button redirecting to a login page. Customer Dashboard: Enables flight booking with a passenger details table (including name, age, passenger and ticket type( First Class, Business Class, and Economy Class)). Downloads ticket invoices in PDF format. Admin Dashboard: Includes management sections for flights, airplanes, airports, and bookings in flights airplanes and airports section admin can add new details in add button. Implements full CRUD functionality for all management sections. View bookings with customer details and total price. Add one wallate where only customer can add mony.All price in indian rupee 2. Advanced Features Real-time form validations. Dynamic progress bar to visualize user progress through booking or management steps. Global navbar with active states indicating the current section. Header across all pages with airline logo, title (“Indian Airline”), and a brief description about the system. 3. Technologies Code must be implemented in JavaScript, bootsrap and CSS. Use modern libraries like React (or any suitable design libraries for advanced styling and user interactions). PDF Invoice Generation with improved structure (e.g., title, horizontal separators, aligned content, and signatures). Implement proper state management using React Context API or Redux. 4.UI/UX Guidelines Create modern, responsive interfaces optimized for all screen sizes. Apply Human Interface Guidelines for intuitive interactions (e.g., subtle animations, elegant tables, and fluid transitions). Ensure cohesive branding with sleek fonts, balanced colors, and structured layouts. Clean and contemporary design with helpful tooltips and clear validation feedback. Prioritize accessibility with support for screen readers, ARIA labels, and seamless keyboard navigation. 5. Structure and Optimization Modular code structure for scalability. Components like Navbar, ProgressBar, Header, and Footer should be reusable. Optimize code for performance (e.g., lazy-loading components and minimizing re-renders). Final Deliverables Provide a complete project consisting of: Source Code: All functionality implemented with clean, readable, and maintainable code. Proper comments and documentation for clarity. UI/UX Designs: Well-designed interfaces for each user role (Guest, Customer, Admin). A unified style for dashboards and management sections. Demo: Include a setup guide for installation and running the application locally or deploying it to the web.
Create the frontend part of this project based on the prompt. After this, I will add the backend using REST API and Spring Boot smoothly.